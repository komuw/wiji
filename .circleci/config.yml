version: 2
jobs:
  run-tests:
    docker:
      - image: circleci/python:3.7
      # Specify multiple images if, for example, you need to use a database for your tests or for some other required service.
      # In a multi-image configuration job, all steps are executed in the container created by the first image listed(primary container).
      # All containers run in a common network and every exposed port will be available on localhost from a primary container.
      # see: https://circleci.com/docs/2.0/executor-types/#using-multiple-docker-images
      - image: 'redis:3.0-alpine'
    environment:
      WIJI_DEBUG: 1
      PYTHONASYNCIODEBUG: 1 
      IN_DOCKER: "Yes"
      WIJI_TEST_REDIS_CONTAINER_NAME: "wiji_test_redis_container"
      REDIS_HOST: "localhost"
      REDIS_PORT: 6379
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
      - run:
          name: install pre-requistes
          command: |
            pwd
            sudo apt -y install pandoc
            sudo pip install -e .[dev,test]
            find . -name '*.pyc' -delete;find . -name '__pycache__' -delete | xargs echo
      - run:
          name: test & coverage
          command: |
            coverage erase
            coverage run --omit="*tests*,*cli/test_*,*examples/*,*.virtualenvs/*,*virtualenv/*,*.venv/*,*__init__*" -m unittest discover -v -s .
            codecov
            coverage report --show-missing --fail-under=70
      - run:
          name: test & branch coverage
          command: |
            # branch coverage
            coverage erase
            coverage run --branch --omit="*tests*,*cli/test_*,*examples/*,*.virtualenvs/*,*virtualenv/*,*.venv/*,*__init__*" -m unittest discover -v -s .
            codecov
            coverage report --show-missing --fail-under=67

  static-analysis:
    docker:
      - image: circleci/python:3.7
    environment:
      WIJI_DEBUG: 1
      PYTHONASYNCIODEBUG: 1 
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install pre-requistes
          command: |
            pwd
            sudo apt -y install pandoc
            sudo pip install -e .[dev,test]
            find . -name '*.pyc' -delete;find . -name '__pycache__' -delete | xargs echo
      - run:
          name: static-analysis
          command: |
            python --version
            black --line-length=100 --check . ||  { printf "\\n\\t please use black to format your code."; exit 77; }
            flake8 .
            pylint --enable=E --disable=W,R,C --unsafe-load-any-extension=y  wiji/ cli/ tests/ documentation/
            bandit -r --exclude .venv -ll .
            mypy --show-column-numbers -p cli -p wiji #--strict

  run-wiji:
    docker:
      - image: circleci/python:3.7
    environment:
      WIJI_DEBUG: 1
      PYTHONASYNCIODEBUG: 1 
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install pre-requistes
          command: |
            pwd
            sudo apt -y install pandoc
            sudo pip install -e .[dev,test]
            find . -name '*.pyc' -delete;find . -name '__pycache__' -delete | xargs echo
      - run:
          name: run-wiji
          command: |
            pwd
            sudo apt -y install pandoc
            sudo pip install -e .[dev,test]
            wiji-cli --version
            wiji-cli --config tests.testdata.cli.my_config.MyConfigInstance --dry-run

  check-releases-notes:
    docker:
      - image: circleci/python:3.7
    environment:
      WIJI_DEBUG: 1
      PYTHONASYNCIODEBUG: 1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: check-releases-notes
          command: |
            git remote set-branches --add origin master
            git fetch
            printf "\n current branch is $CIRCLE_BRANCH \n"
            if [ "$CIRCLE_BRANCH" == "master" ]; then
                printf "\n $CIRCLE_BRANCH branch, ignoring check for relese notes \n"
            else
                ChangedFiles=`git diff --name-only $CIRCLE_BRANCH remotes/origin/master`
                case "$ChangedFiles" in
                    *CHANGELOG.*)
                        printf "\n Thanks, your commits include update to release notes. \n";;
                    *)
                        printf "\n You should add release notes to CHANGELOG.md \n" && exit 77;;
                esac
            fi

workflows:
  version: 2
  flow1:
    jobs:
      - run-tests
      - static-analysis
      - run-wiji
      - check-releases-notes
